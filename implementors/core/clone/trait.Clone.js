(function() {var implementors = {};
implementors["codegen"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.AssociatedType.html\" title=\"struct codegen::AssociatedType\">AssociatedType</a>","synthetic":false,"types":["codegen::associated_type::AssociatedType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Block.html\" title=\"struct codegen::Block\">Block</a>","synthetic":false,"types":["codegen::block::Block"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Field.html\" title=\"struct codegen::Field\">Field</a>","synthetic":false,"types":["codegen::field::Field"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Function.html\" title=\"struct codegen::Function\">Function</a>","synthetic":false,"types":["codegen::function::Function"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Import.html\" title=\"struct codegen::Import\">Import</a>","synthetic":false,"types":["codegen::import::Import"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Module.html\" title=\"struct codegen::Module\">Module</a>","synthetic":false,"types":["codegen::module::Module"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Scope.html\" title=\"struct codegen::Scope\">Scope</a>","synthetic":false,"types":["codegen::scope::Scope"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Variant.html\" title=\"struct codegen::Variant\">Variant</a>","synthetic":false,"types":["codegen::variant::Variant"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Enum.html\" title=\"struct codegen::Enum\">Enum</a>","synthetic":false,"types":["codegen::enum::Enum"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Impl.html\" title=\"struct codegen::Impl\">Impl</a>","synthetic":false,"types":["codegen::impl::Impl"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Struct.html\" title=\"struct codegen::Struct\">Struct</a>","synthetic":false,"types":["codegen::struct::Struct"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Trait.html\" title=\"struct codegen::Trait\">Trait</a>","synthetic":false,"types":["codegen::trait::Trait"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"codegen/struct.Type.html\" title=\"struct codegen::Type\">Type</a>","synthetic":false,"types":["codegen::type::Type"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()